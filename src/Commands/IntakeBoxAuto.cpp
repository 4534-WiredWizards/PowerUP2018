// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "IntakeBoxAuto.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

IntakeBoxAuto::IntakeBoxAuto(double rate): frc::Command() {
    m_rate = rate;
        // Use requires() here to declare subsystem dependencies
    // eg. requires(Robot::chassis.get());
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
	Requires(Robot::boxHandler.get());
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=REQUIRES
}
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

// Called just before this Command runs the first time
void IntakeBoxAuto::Initialize() {
	Robot::arduinoSerial->SetAnimation("i");
}

// Called repeatedly when this Command is scheduled to run
void IntakeBoxAuto::Execute() {
	if(!Robot::boxHandler->getLimitSwitch()) {
		Robot::boxHandler->setLeftSpeed(1.4 * m_rate); // Non-equal Numbers to spin box and avoid 45 degree split.
		Robot::boxHandler->setRightSpeed(0.8 * m_rate);
	} else {
		Robot::boxHandler->setLeftSpeed(0);
		Robot::boxHandler->setRightSpeed(0);
	}

}

// Make this return true when this Command no longer needs to run execute()
bool IntakeBoxAuto::IsFinished() {
	if(Robot::boxHandler->getLimitSwitch()) {
		return true;
	}
	else return false;
}

// Called once after isFinished returns true
void IntakeBoxAuto::End() {
	Robot::boxHandler->setLeftSpeed(0);
	Robot::boxHandler->setRightSpeed(0);
}

// Called when another command which requires one or more of the same
// subsystems is scheduled to run
void IntakeBoxAuto::Interrupted() {
	Robot::boxHandler->setLeftSpeed(0);
	Robot::boxHandler->setRightSpeed(0);
}
