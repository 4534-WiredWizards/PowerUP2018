// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.

// You're going to die someday.






#include "OI.h"

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES
#include "SmartDashboard/SmartDashboard.h"
#include "Commands/CenterAuto.h"
#include "Commands/DeployBJoings.h"
#include "Commands/DriveStraightDistance.h"
#include "Commands/DriveStraightTimed.h"
#include "Commands/DriveWithJoystick.h"
#include "Commands/EjectBox.h"
#include "Commands/EngageHighGear.h"
#include "Commands/IntakeBox.h"
#include "Commands/LiftToHeight.h"
#include "Commands/LiftWithJoystick.h"
#include "Commands/ResetGyro.h"
#include "Commands/RetractBJoings.h"
#include "Commands/StartCompressor.h"
#include "Commands/StopCompressor.h"
#include "Commands/TurnAngle.h"
#include "Commands/TurnTimed.h"
#include "Commands/DriveStraightTimed.h"
#include "Commands/BezierCurve.h"
#include "Commands/DriveStraightDistance.h"
#include "Commands/Ascend.h"
#include "Commands/Descend.h"
    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=INCLUDES

#include "Commands/RaiseBoxHandler.h"
#include "Commands/LowerBoxHandler.h"
#include "Commands/BoxHandlerTrigger.h"
#include "Commands/SmartAuto.h"
#include "Commands/DriveStraightDistancePID.h"
#include "Commands/TurnAnglePID.h"
OI::OI() {
    // Process operator interface input here.
    // BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
    joystick.reset(new frc::Joystick(0));
    
    startButton.reset(new frc::JoystickButton(joystick.get(), 8));
    startButton->WhileHeld(new Ascend(0.5));
    selectButton.reset(new frc::JoystickButton(joystick.get(), 7));
    selectButton->WhenPressed(new DeployBJoings());
    rightBumper.reset(new frc::JoystickButton(joystick.get(), 6));
    rightBumper->WhileHeld(new EjectBox(1.0));
    leftBumper.reset(new frc::JoystickButton(joystick.get(), 5));
    leftBumper->WhileHeld(new IntakeBox(0.5));
    yButton.reset(new frc::JoystickButton(joystick.get(), 4));
    yButton->WhenPressed(new LiftToHeight(30));
    xButton.reset(new frc::JoystickButton(joystick.get(), 3));
    xButton->WhenPressed(new LiftToHeight(20));
    bButton.reset(new frc::JoystickButton(joystick.get(), 2));
    bButton->WhenPressed(new LiftToHeight(0));
    aButton.reset(new frc::JoystickButton(joystick.get(), 1));
    aButton->WhenPressed(new LiftToHeight(0));
    leftJoystick.reset(new frc::JoystickButton(joystick.get(), 9));
    //leftJoystick->WhenPressed(new EngageHighGear());
    // SmartDashboard Buttons

    //frc::SmartDashboard::PutData("DriveStraightTimed", new DriveStraightTimed(2,0.5));
    frc::SmartDashboard::PutData("RetractBJoings", new RetractBJoings());
    //frc::SmartDashboard::PutData("DeployBJoings", new DeployBJoings());
    frc::SmartDashboard::PutData("ResetGyro", new ResetGyro());
  //  frc::SmartDashboard::PutData("StopCompressor", new StopCompressor());
  //  frc::SmartDashboard::PutData("StartCompressor", new StartCompressor());
    //frc::SmartDashboard::PutData("TurnTimed", new TurnTimed(5,0.5));
    frc::SmartDashboard::PutData("EjectBox", new EjectBox(10));
    //frc::SmartDashboard::PutData("BezierCurve", new BezierCurve(0, 0, 100, 0, 100, 100, 200, 100, 50));
    //frc::SmartDashboard::PutData("DriveStraightDistance", new DriveStraightDistance(20,4));
    frc::SmartDashboard::PutData("LiftToHeight", new LiftToHeight(30));
    frc::SmartDashboard::PutData("IntakeBox", new IntakeBox(900));
    frc::SmartDashboard::PutData("RaiseBoxHandler", new RaiseBoxHandler());
    frc::SmartDashboard::PutData("BoxHandlerTrigger", new BoxHandlerTrigger());
    frc::SmartDashboard::PutData("DriveStraightDistancePID", new DriveStraightDistancePID(90,1));
    frc::SmartDashboard::PutData("TurnAnglePID", new TurnAnglePID(90,1));
    frc::SmartDashboard::PutData("Descend", new Descend(0.5));


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTORS
}

// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS

std::shared_ptr<frc::Joystick> OI::getJoystick() {
   return joystick;
}


    // END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=FUNCTIONS
