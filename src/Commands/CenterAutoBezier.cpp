// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// C++ from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


#include "../Robot.h"
#include "CenterAutoBezier.h"
#include "DriveStraightDistance.h"
#include "EjectBox.h"
#include "TurnAngle.h"
#include "LiftToHeight.h"
#include "BoxHandlerTrigger.h"
#include "BezierCurve.h"
#include "DriveStraightTimed.h"


// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR

CenterAutoBezier::CenterAutoBezier() {
	AddSequential (new DriveStraightTimed(frc::SmartDashboard::GetNumber("Auto Delay",0),0));


	// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=CONSTRUCTOR
	// Add Commands here:
	// e.g. AddSequential(new Command1());
	//      AddSequential(new Command2());
	// these will run in order.

	// To run multiple commands at the same time,
	// use AddParallel()
	// e.g. AddParallel(new Command1());
	//      AddSequential(new Command2());
	// Command1 and Command2 will run in parallel.

	// A command group will require all of the subsystems that each member
	// would require.
	// e.g. if Command1 requires chassis, and Command2 requires arm,
	// a CommandGroup containing them would require both the chassis and the
	// arm.
	// BEGIN AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS
	switch (Robot::target){
	case 0:
		//drive forward past line
		AddSequential(new DriveStraightDistance(40,1));
		break;
	case 1:
			//AddSequential(new DriveStraightDistance(30,0.5));
			//AddSequential(new TurnAngle(90, 1));

		if(Robot::location=="Center"){
			//Robot starts at center and goes to left side of the switch
			if(Robot::SwitchPosition[1]=='L') {
//				AddSequential (new DriveStraightDistance(84,1));
//				AddSequential (new TurnAngle(-90,1));
//				AddSequential (new DriveStraightDistance(66,1));
//				AddSequential (new TurnAngle(90,1));
//				AddSequential (new DriveStraightDistance(48,1));
//				AddSequential (new LiftToHeight(10));
//				AddSequential (new EjectBox(1));
				AddSequential (new BezierCurve(-0,0,-0,60,-80,70,-80,140,100,false));
				AddSequential(new  LiftToHeight(10));
				AddSequential(new  EjectBox(1));
				//Robot at center to right side of switch
				}
		else {
//			AddSequential (new DriveStraightDistance(84,1));
//			AddSequential (new TurnAngle(90,1));
//			AddSequential (new DriveStraightDistance(66,1));
//			AddSequential (new TurnAngle(-90,1));
//			AddSequential (new DriveStraightDistance(48,1));
//			AddSequential (new LiftToHeight(10));
//			AddSequential (new EjectBox(1));
			AddSequential(new BezierCurve(0,0,0,60,80,70,80,140,100,false));
			AddSequential(new LiftToHeight(10));
			AddSequential(new EjectBox(1));
		}
		break;
	case 2:
		if(Robot::SwitchPosition[1]=='R'){
		}
//			AddSequential (new DriveStraightDistance(96,1));
//			AddSequential (new TurnAngle(-90,1));
//			AddSequential (new DriveStraightDistance(120,1));
//			AddSequential (new TurnAngle(90,30));
//			AddSequential (new DriveStraightDistance(228,1));
//			AddSequential (new TurnAngle(90,1));
//			AddSequential (new LiftToHeight(40));
//			AddSequential (new EjectBox(1));
		// robot at center going to the right of the scale
		AddSequential(new BezierCurve(0,0,0,60,80,70,80,140,100,false));
			AddSequential(new LiftToHeight(10));
			AddSequential(new EjectBox(1));
		}	else {
//			AddSequential (new DriveStraightDistance(96,1));
//			AddSequential (new TurnAngle(90,1));
//			AddSequential (new DriveStraightDistance(120,1));
//			AddSequential (new TurnAngle(-90,1));
//			AddSequential (new DriveStraightDistance(228,1));
//			AddSequential (new TurnAngle(-90,1));
//			AddSequential (new LiftToHeight(40));
//			AddSequential (new EjectBox(1));
			// robot at center going to the left of the scale
			AddSequential(new BezierCurve(-0,0,-0,60,-80,70,-80,140,100,false));
			AddSequential(new LiftToHeight(10));
			AddSequential(new EjectBox(1));
		}

		break;
	case 3:
		if(Robot::SwitchPosition[0]=='L'){
//			AddSequential (new DriveStraightDistance(84,1));
//			AddSequential (new TurnAngle(-90,1));
//			AddSequential (new DriveStraightDistance(66,1));
//			AddSequential (new TurnAngle(90,1));
//			AddSequential (new DriveStraightDistance(48,1));
//			AddSequential (new LiftToHeight(10));
//			AddSequential (new EjectBox(1));
			// robot going from

			if (Robot::SwitchPosition[1]=='L'){
//				AddSequential (new TurnAngle(-90,1));
//				AddSequential (new DriveStraightDistance(21,1));
//				AddSequential (new TurnAngle(90,1));
//				AddSequential (new DriveStraightDistance(21,1));
//				//I have no idea where to even begin with the picking up boxes command.
//				AddSequential (new DriveStraightDistance(42,1));
//				AddSequential (new TurnAngle(90,1));
//				AddSequential (new EjectBox(1));
				// going from center to left switch to left scale
				AddSequential(new BezierCurve(-0,0,-0,60,-80,70,-80,140,100,false));
				AddSequential(new LiftToHeight(10));
				AddSequential(new EjectBox(1));
				//CODE TO PICK UP BOXES GOES HERE
				AddSequential(new DriveStraightDistance(-40,1));
				AddSequential(new BezierCurve(-0,0,-0,5,5,25,-5,40,100,false));
				AddSequential(new LiftToHeight(10));
				AddSequential(new EjectBox(1));
						}



			} else{
				if(Robot::SwitchPosition[0]=='R'){
//					AddSequential (new TurnAngle(-90,1));
//					AddSequential (new DriveStraightDistance(20,1));
//					AddSequential (new TurnAngle(0,1));
//					AddSequential (new DriveStraightDistance(40,1));
//					//insert box grabbing code
//					AddSequential (new TurnAngle(90,1));
//					AddSequential (new DriveStraightDistance(40,1));
//					AddSequential (new LiftToHeight(10));
//					AddSequential (new EjectBox(1));
					// going from center to right switch to right scale
					AddSequential(new BezierCurve(0,0,0,60,130,250,95,300,100,false));
					AddSequential(new LiftToHeight(10));
					AddSequential(new EjectBox(1));
					AddSequential(new DriveStraightDistance(-40,1));
					//BOXY GRABBY CODEY
					AddSequential(new BezierCurve(0,0,0,5,5,25,5,40,100,false));
					AddSequential(new LiftToHeight(10));
					AddSequential(new EjectBox(1));


						} 	else {
//							AddSequential (new DriveStraightDistance(84,1));
//							AddSequential (new TurnAngle(90,1));
//							AddSequential (new DriveStraightDistance(66,1));
//							AddSequential (new TurnAngle(-90,1));
//							AddSequential (new DriveStraightDistance(48,1));
//							AddSequential (new LiftToHeight(10));
//							AddSequential (new EjectBox(1));
							AddSequential(new BezierCurve(-0,0,-0,60,-80,70,-80,140,100,false));
							AddSequential(new LiftToHeight(10));
							AddSequential(new EjectBox(1));
							AddSequential(new DriveStraightDistance(-40,1));
							//GIMME SOME BOX GETTIN' CODE PLEASE
							AddSequential(new BezierCurve(0,0,0,40,130,70,115,95,100,false));
							AddSequential(new LiftToHeight(10));
							AddSequential(new EjectBox(1));

							if(Robot::SwitchPosition[1]=='R'){
//								AddSequential (new TurnAngle(90,1));
//								AddSequential (new DriveStraightDistance(24,1));
//								AddSequential (new TurnAngle(-90,1));
//								AddSequential (new DriveStraightDistance(40,1));
//								AddSequential (new TurnAngle(-90,1));
//								AddSequential (new LiftToHeight(40));
//								AddSequential (new EjectBox(1));
							} else {
//								AddSequential (new TurnAngle(0,1));
//								AddSequential (new DriveStraightDistance(40,1));
//								AddSequential (new TurnAngle(90,1));
//								//insert box grabbing code
//								AddSequential (new DriveStraightDistance(60,1));
//								AddSequential (new TurnAngle(90,1));
//								AddSequential (new DriveStraightDistance(40,1));
//								AddSequential (new LiftToHeight(40));
//								AddSequential (new EjectBox(1));
								AddSequential(new BezierCurve(0,0,0,60,80,70,80,140,100,false));
								AddSequential(new LiftToHeight(10));
								AddSequential(new EjectBox(1));
								AddSequential(new DriveStraightDistance(-40,1));
						//I NEED SUM GUSH DURN BOX GRABBING CODE
								AddSequential(new BezierCurve(0,0,0,5,5,25,5,40,100,false));
								AddSequential(new LiftToHeight(10));
								AddSequential(new EjectBox(1));


							}


						}
						break;
					default:
						//AddSequential (new DriveStraightDistance(120,1));
						//put some stuff here
						break;

					}
				}}


// END AUTOGENERATED CODE, SOURCE=ROBOTBUILDER ID=COMMAND_DECLARATIONS

